int led = 11;
int flm = 10;
int lp = 4;
int scp = 9;
int din = 8;
int sw1 = 2;
int sw2 = 3;

int current = '1';

void pulse() {
  digitalWrite(scp, LOW);
  digitalWrite(scp, HIGH);
}

void setup() {
	Serial.begin(9600);
	pinMode(led, OUTPUT);
	pinMode(flm, OUTPUT);
	pinMode(lp, OUTPUT);
	pinMode(scp, OUTPUT);
	pinMode(din, OUTPUT);

	pinMode(sw1, INPUT_PULLUP);
	pinMode(sw2, INPUT_PULLUP);

	analogWrite(led, 10);
	digitalWrite(scp, HIGH);
	digitalWrite(din, LOW);
	digitalWrite(flm, LOW);
	digitalWrite(lp, LOW);

	cli();
	  TCCR1A = 0;
	  TCCR1B = 0;
	  TCNT1  = 0;
	  OCR1A = 3000;// = (16*10^6) / (1*1024) - 1 (must be <65536)
	  TCCR1B |= (1 << WGM12);
	  TCCR1B |= (0 << CS12) | (1 << CS11) | (0 << CS10);
	  TIMSK1 |= (1 << OCIE1A);
	sei();
}

int y = 1;
int x = 1;
int row = 1;
ISR(TIMER1_COMPA_vect){
	//@#
// Name: Armenian
// SID: 3
// WID: -266009557
if (current == '3'){
if (row == 1){
digitalWrite(flm, HIGH);
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
digitalWrite(flm, LOW);
}
if (row == 2){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 3){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 4){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 5){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 6){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 7){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 8){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 9){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 10){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 11){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 12){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 13){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 14){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 15){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 16){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 17){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 18){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 19){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 20){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 21){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 22){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 23){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 24){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
}
// Name: English
// SID: 2
// WID: 67699721
if (current == '2'){
if (row == 1){
digitalWrite(flm, HIGH);
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
digitalWrite(flm, LOW);
}
if (row == 2){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 3){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 4){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 5){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 6){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 7){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 8){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 9){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 10){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 11){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 12){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 13){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 14){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 15){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 16){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 17){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 18){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 19){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, HIGH);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 20){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 21){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 22){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 23){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
if (row == 24){
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(din, LOW);
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
pulse();
digitalWrite(lp, HIGH);
digitalWrite(lp, LOW);
}
}
	//@#
  row++;
  if (row > 24) {
    row = 1;
  }
}

int sw1s = 0;
int sw2s = 0;
int first1 = 1;
int first2 = 2;
void loop() {
	  // put your main code here, to run repeatedly:

	if (Serial.available() > 0) {
					// read the incoming byte:
					current = Serial.read(),DEC;
					//Serial.write(current);
	}

	if (digitalRead(sw1) == HIGH){
	  if (first1 == 1){
		  Serial.write('3');
		  first1 = 0;
		}
		sw1s = 0;
	}
	if (digitalRead(sw2) == HIGH){
		if (first2 == 1){
		  Serial.write('4');
		  first2 = 0;
		}
		sw2s = 0;
	}
	if (digitalRead(sw1) == LOW){
		if (sw1s == 0){
			Serial.write('1');
			sw1s = 1;
			first1 = 1;
		}
	}
	if (digitalRead(sw2) == LOW){
		if (sw2s == 0){
			Serial.write('2');
			sw2s = 1;
			first2 = 1;
		}
	}
}
